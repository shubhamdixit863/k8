# This is an auto-generated file. DO NOT EDIT
apiVersion: v1
kind: ServiceAccount
metadata:
  name: numaflow-server-sa
  namespace: numaflow-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: numaflow-ux
    app.kubernetes.io/name: numaflow-ux
    app.kubernetes.io/part-of: numaflow
  name: numaflow-server-secrets-role
  namespace: numaflow-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: numaflow-ux
    app.kubernetes.io/name: numaflow-ux
    app.kubernetes.io/part-of: numaflow
  name: numaflow-server-role
rules:
- apiGroups:
  - numaflow.numaproj.io
  resources:
  - interstepbufferservices
  - interstepbufferservices/finalizers
  - interstepbufferservices/status
  - pipelines
  - pipelines/finalizers
  - pipelines/status
  - vertices
  - vertices/finalizers
  - vertices/status
  - vertices/scale
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - pods
  - pods/log
  - pods/exec
  - configmaps
  - services
  - persistentvolumeclaims
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: numaflow-ux
    app.kubernetes.io/name: numaflow-ux
    app.kubernetes.io/part-of: numaflow
  name: numaflow-server-secrets-binding
  namespace: numaflow-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: numaflow-server-secrets-role
subjects:
- kind: ServiceAccount
  name: numaflow-server-sa
  namespace: numaflow-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: numaflow-ux
    app.kubernetes.io/name: numaflow-ux
    app.kubernetes.io/part-of: numaflow
  name: numaflow-server-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: numaflow-server-role
subjects:
- kind: ServiceAccount
  name: numaflow-server-sa
  namespace: numaflow-system
---
apiVersion: v1
data:
  server.disable.auth: "true"
kind: ConfigMap
metadata:
  name: numaflow-cmd-params-config
  namespace: numaflow-system
---
apiVersion: v1
data:
  admin.enabled: "true"
kind: ConfigMap
metadata:
  name: numaflow-server-local-user-config
  namespace: numaflow-system
---
apiVersion: v1
data:
  rbac-conf.yaml: |
    policy.default: role:readonly
    # The scopes field controls which authentication scopes to examine during rbac enforcement.
    # We can have multiple scopes, and the first scope that matches with the policy will be used.
    # The default value is "groups", which means that the groups field of the user's token will be examined
    # The other possible value is "email", which means that the email field of the user's token will be examined
    # It can be provided as a comma-separated list, e.g "groups,email,username"
    policy.scopes: groups,email,username
  rbac-policy.csv: |
    # Policies go here
    p, role:admin, *, *, *
    p, role:readonly, *, *, GET
    # Groups go here
    # g, admin, role:admin
    # g, my-github-org:my-github-team, role:readonly
kind: ConfigMap
metadata:
  name: numaflow-server-rbac-config
  namespace: numaflow-system
---
apiVersion: v1
kind: Secret
metadata:
  name: numaflow-server-secrets
  namespace: numaflow-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: numaflow-server
  namespace: numaflow-system
spec:
  ports:
  - name: web
    port: 8443
    targetPort: 8443
  selector:
    app.kubernetes.io/component: numaflow-ux
    app.kubernetes.io/name: numaflow-ux
    app.kubernetes.io/part-of: numaflow
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: numaflow-server
  namespace: numaflow-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: numaflow-ux
      app.kubernetes.io/name: numaflow-ux
      app.kubernetes.io/part-of: numaflow
  template:
    metadata:
      labels:
        app.kubernetes.io/component: numaflow-ux
        app.kubernetes.io/name: numaflow-ux
        app.kubernetes.io/part-of: numaflow
    spec:
      containers:
      - args:
        - server
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NUMAFLOW_SERVER_INSECURE
          valueFrom:
            configMapKeyRef:
              key: server.insecure
              name: numaflow-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_PORT_NUMBER
          valueFrom:
            configMapKeyRef:
              key: server.port
              name: numaflow-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_NAMESPACED
          valueFrom:
            configMapKeyRef:
              key: namespaced
              name: numaflow-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_MANAGED_NAMESPACE
          valueFrom:
            configMapKeyRef:
              key: managed.namespace
              name: numaflow-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_BASE_HREF
          valueFrom:
            configMapKeyRef:
              key: server.base.href
              name: numaflow-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_DISABLE_AUTH
          valueFrom:
            configMapKeyRef:
              key: server.disable.auth
              name: numaflow-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_DEX_SERVER_ADDR
          valueFrom:
            configMapKeyRef:
              key: server.dex.server
              name: numaflow-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: server.address
              name: numaflow-cmd-params-config
              optional: true
        image: docker.intuit.com/quay-rmt/numaproj/numaflow:v1.1.5
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /livez
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 3
          periodSeconds: 3
        name: main
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - mountPath: /ui/build/runtime-env.js
          name: env-volume
          subPath: runtime-env.js
        - mountPath: /ui/build/index.html
          name: env-volume
          subPath: index.html
        - mountPath: /etc/numaflow
          name: rbac-config
      initContainers:
      - args:
        - server-init
        env:
        - name: NUMAFLOW_SERVER_BASE_HREF
          valueFrom:
            configMapKeyRef:
              key: server.base.href
              name: numaflow-cmd-params-config
              optional: true
        image: docker.intuit.com/quay-rmt/numaproj/numaflow:v1.1.5
        imagePullPolicy: Always
        name: server-init
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - mountPath: /opt/numaflow
          name: env-volume
      - args:
        - server-secrets-init
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.intuit.com/quay-rmt/numaproj/numaflow:v1.1.5
        imagePullPolicy: Always
        name: server-secrets-init
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 9737
      serviceAccountName: numaflow-server-sa
      volumes:
      - emptyDir: {}
        name: env-volume
      - configMap:
          name: numaflow-server-rbac-config
        name: rbac-config
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: interstepbufferservices.numaflow.numaproj.io
spec:
  group: numaflow.numaproj.io
  names:
    kind: InterStepBufferService
    listKind: InterStepBufferServiceList
    plural: interstepbufferservices
    shortNames:
    - isbsvc
    singular: interstepbufferservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.type
      name: Type
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: pipelines.numaflow.numaproj.io
spec:
  group: numaflow.numaproj.io
  names:
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    shortNames:
    - pl
    singular: pipeline
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    - jsonPath: .status.vertexCount
      name: Vertices
      type: integer
    - jsonPath: .status.sourceCount
      name: Sources
      priority: 10
      type: integer
    - jsonPath: .status.sinkCount
      name: Sinks
      priority: 10
      type: integer
    - jsonPath: .status.udfCount
      name: UDFs
      priority: 10
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: vertices.numaflow.numaproj.io
spec:
  group: numaflow.numaproj.io
  names:
    kind: Vertex
    listKind: VertexList
    plural: vertices
    shortNames:
    - vtx
    singular: vertex
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.reason
      name: Reason
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    - jsonPath: .spec.replicas
      name: Desired
      type: string
    - jsonPath: .status.replicas
      name: Current
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: numaflow-aggregate-to-admin
rules:
- apiGroups:
  - numaflow.numaproj.io
  resources:
  - interstepbufferservices
  - interstepbufferservices/finalizer
  - interstepbufferservices/status
  - pipelines
  - pipelines/finalizers
  - pipelines/status
  - vertices
  - vertices/finalizers
  - vertices/status
  - vertices/scale
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: numaflow-wf-collector
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  - nodes
  - services
  verbs:
  - get
  - list
  - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wf-collector
  namespace: numaflow-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: numaflow-wf-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: numaflow-wf-collector
subjects:
- kind: ServiceAccount
  name: wf-collector
  namespace: numaflow-system
---
apiVersion: v1
data:
  collector.yaml: |
    clusterName: devp-msaas-prd-usw2-k8s
    enableEvents: false
    enableDiscovery: true
    defaultCollectionInterval: 10s
    flushInterval: 30s
    sinks:
    - proxyAddress: wavefront-s3-adapter.addon-wavefront-s3-adapter-ns.svc:12878
    sources:
      kubernetes_source:
        url: https://kubernetes.default.svc
    discovery:
      disable_annotation_discovery: true
      plugins:
      - name: numaflow
        type: prometheus
        selectors:
          labels:
            numaflow.numaproj.io/pipeline-name:
              - '*'
            numaflow.numaproj.io/vertex-name:
              - '*'
        port: 2469
        path: /metrics
        scheme: https
        prefix: custom.numaflow.
        filters:
          metricDenyList:
          - 'custom.numaflow.go.*'
      - name: numaflow-controller-manager
        type: prometheus
        selectors:
          labels:
            app.kubernetes.io/part-of:
             - 'numaflow'
            app.kubernetes.io/component:
             - 'controller-manager'
        port: 9090
        path: /metrics
        scheme: http
        prefix: custom.numaflow.controller.manager.
        filters:
          metricDenyList:
          - 'custom.numaflow.controller.manager.go.*'
kind: ConfigMap
metadata:
  name: wavefront-collector-config-cm
  namespace: numaflow-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wavefront-collector
  namespace: numaflow-system
spec:
  selector:
    matchLabels:
      app: wavefront-collector
  template:
    metadata:
      labels:
        app: wavefront-collector
    spec:
      containers:
      - command:
        - /wavefront-collector
        - --config-file=/etc/collector/collector.yaml
        image: docker.intuit.com/docker-rmt/wavefronthq/wavefront-kubernetes-collector:1.3.5
        name: wavefront-collector
        resources:
          requests:
            cpu: 0.5
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/collector
          name: wavefront-collector-config
      serviceAccountName: wf-collector
      volumes:
      - configMap:
          name: wavefront-collector-config-cm
        name: wavefront-collector-config
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: numaflow-aggregate-to-edit
rules:
- apiGroups:
  - numaflow.numaproj.io
  resources:
  - interstepbufferservices
  - interstepbufferservices/finalizers
  - interstepbufferservices/status
  - pipelines
  - pipelines/finalizers
  - pipelines/status
  - vertices
  - vertices/finalizers
  - vertices/status
  - vertices/scale
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: numaflow-aggregate-to-view
rules:
- apiGroups:
  - numaflow.numaproj.io
  resources:
  - interstepbufferservices
  - interstepbufferservices/finalizers
  - interstepbufferservices/status
  - pipelines
  - pipelines/finalizers
  - pipelines/status
  - vertices
  - vertices/finalizers
  - vertices/status
  - vertices/scale
  verbs:
  - get
  - list
  - watch
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/certificate-arn: 'arn:aws:acm:us-west-2:822523350343:certificate/19aa1ccd-b576-400b-9a68-3f3620caf59b'
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=false
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/security-groups: iks-intuit-cidr-ingress-tcp-443, iks-intuit-ibp-ingress-tcp-443,
      iks-intuit-app-alb-custom-ingress
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01
    alb.ingress.kubernetes.io/subnets: IngressSubnetAz1, IngressSubnetAz2, IngressSubnetAz3
    external-dns.alpha.kubernetes.io/hostname: 'numaflow.devpmsaasprdusw2.iks2.a.intuit.com'
  labels:
    app: nginx-service
  name: nginx-alb-ingress
  namespace: numaflow-system
spec:
  ingressClassName: aws-alb
  rules:
  - http:
      paths:
      - backend:
          service:
            name: numaflow-server
            port:
              number: 8443
        path: /*
        pathType: ImplementationSpecific
